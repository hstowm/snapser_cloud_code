/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// AuthGoogleLoginResponse struct for AuthGoogleLoginResponse
type AuthGoogleLoginResponse struct {
	User *AuthUser `json:"user,omitempty"`
}

// NewAuthGoogleLoginResponse instantiates a new AuthGoogleLoginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthGoogleLoginResponse() *AuthGoogleLoginResponse {
	this := AuthGoogleLoginResponse{}
	return &this
}

// NewAuthGoogleLoginResponseWithDefaults instantiates a new AuthGoogleLoginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthGoogleLoginResponseWithDefaults() *AuthGoogleLoginResponse {
	this := AuthGoogleLoginResponse{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuthGoogleLoginResponse) GetUser() AuthUser {
	if o == nil || isNil(o.User) {
		var ret AuthUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthGoogleLoginResponse) GetUserOk() (*AuthUser, bool) {
	if o == nil || isNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuthGoogleLoginResponse) HasUser() bool {
	if o != nil && !isNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AuthUser and assigns it to the User field.
func (o *AuthGoogleLoginResponse) SetUser(v AuthUser) {
	o.User = &v
}

func (o AuthGoogleLoginResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.User) {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableAuthGoogleLoginResponse struct {
	value *AuthGoogleLoginResponse
	isSet bool
}

func (v NullableAuthGoogleLoginResponse) Get() *AuthGoogleLoginResponse {
	return v.value
}

func (v *NullableAuthGoogleLoginResponse) Set(val *AuthGoogleLoginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthGoogleLoginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthGoogleLoginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthGoogleLoginResponse(val *AuthGoogleLoginResponse) *NullableAuthGoogleLoginResponse {
	return &NullableAuthGoogleLoginResponse{value: val, isSet: true}
}

func (v NullableAuthGoogleLoginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthGoogleLoginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
