/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// CreateTicketRequest struct for CreateTicketRequest
type CreateTicketRequest struct {
	SearchFields *MatchmakingSearchFields `json:"search_fields,omitempty"`
}

// NewCreateTicketRequest instantiates a new CreateTicketRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTicketRequest() *CreateTicketRequest {
	this := CreateTicketRequest{}
	return &this
}

// NewCreateTicketRequestWithDefaults instantiates a new CreateTicketRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTicketRequestWithDefaults() *CreateTicketRequest {
	this := CreateTicketRequest{}
	return &this
}

// GetSearchFields returns the SearchFields field value if set, zero value otherwise.
func (o *CreateTicketRequest) GetSearchFields() MatchmakingSearchFields {
	if o == nil || isNil(o.SearchFields) {
		var ret MatchmakingSearchFields
		return ret
	}
	return *o.SearchFields
}

// GetSearchFieldsOk returns a tuple with the SearchFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTicketRequest) GetSearchFieldsOk() (*MatchmakingSearchFields, bool) {
	if o == nil || isNil(o.SearchFields) {
		return nil, false
	}
	return o.SearchFields, true
}

// HasSearchFields returns a boolean if a field has been set.
func (o *CreateTicketRequest) HasSearchFields() bool {
	if o != nil && !isNil(o.SearchFields) {
		return true
	}

	return false
}

// SetSearchFields gets a reference to the given MatchmakingSearchFields and assigns it to the SearchFields field.
func (o *CreateTicketRequest) SetSearchFields(v MatchmakingSearchFields) {
	o.SearchFields = &v
}

func (o CreateTicketRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SearchFields) {
		toSerialize["search_fields"] = o.SearchFields
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTicketRequest struct {
	value *CreateTicketRequest
	isSet bool
}

func (v NullableCreateTicketRequest) Get() *CreateTicketRequest {
	return v.value
}

func (v *NullableCreateTicketRequest) Set(val *CreateTicketRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTicketRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTicketRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTicketRequest(val *CreateTicketRequest) *NullableCreateTicketRequest {
	return &NullableCreateTicketRequest{value: val, isSet: true}
}

func (v NullableCreateTicketRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTicketRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
