/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// ErrorsApiError struct for ErrorsApiError
type ErrorsApiError struct {
	// API Error code
	ApiErrorCode *int32 `json:"api_error_code,omitempty"`
	// Error details
	Details *string `json:"details,omitempty"`
	// Error message
	Message *string `json:"message,omitempty"`
}

// NewErrorsApiError instantiates a new ErrorsApiError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorsApiError() *ErrorsApiError {
	this := ErrorsApiError{}
	return &this
}

// NewErrorsApiErrorWithDefaults instantiates a new ErrorsApiError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorsApiErrorWithDefaults() *ErrorsApiError {
	this := ErrorsApiError{}
	return &this
}

// GetApiErrorCode returns the ApiErrorCode field value if set, zero value otherwise.
func (o *ErrorsApiError) GetApiErrorCode() int32 {
	if o == nil || isNil(o.ApiErrorCode) {
		var ret int32
		return ret
	}
	return *o.ApiErrorCode
}

// GetApiErrorCodeOk returns a tuple with the ApiErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsApiError) GetApiErrorCodeOk() (*int32, bool) {
	if o == nil || isNil(o.ApiErrorCode) {
		return nil, false
	}
	return o.ApiErrorCode, true
}

// HasApiErrorCode returns a boolean if a field has been set.
func (o *ErrorsApiError) HasApiErrorCode() bool {
	if o != nil && !isNil(o.ApiErrorCode) {
		return true
	}

	return false
}

// SetApiErrorCode gets a reference to the given int32 and assigns it to the ApiErrorCode field.
func (o *ErrorsApiError) SetApiErrorCode(v int32) {
	o.ApiErrorCode = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ErrorsApiError) GetDetails() string {
	if o == nil || isNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsApiError) GetDetailsOk() (*string, bool) {
	if o == nil || isNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ErrorsApiError) HasDetails() bool {
	if o != nil && !isNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *ErrorsApiError) SetDetails(v string) {
	o.Details = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorsApiError) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsApiError) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorsApiError) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorsApiError) SetMessage(v string) {
	o.Message = &v
}

func (o ErrorsApiError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApiErrorCode) {
		toSerialize["api_error_code"] = o.ApiErrorCode
	}
	if !isNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableErrorsApiError struct {
	value *ErrorsApiError
	isSet bool
}

func (v NullableErrorsApiError) Get() *ErrorsApiError {
	return v.value
}

func (v *NullableErrorsApiError) Set(val *ErrorsApiError) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorsApiError) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorsApiError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorsApiError(val *ErrorsApiError) *NullableErrorsApiError {
	return &NullableErrorsApiError{value: val, isSet: true}
}

func (v NullableErrorsApiError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorsApiError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
