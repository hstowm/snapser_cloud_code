/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// GrantItemsToUserRequest struct for GrantItemsToUserRequest
type GrantItemsToUserRequest struct {
	// Unique name and count of items to grant to user
	Items *map[string]int32 `json:"items,omitempty"`
	// Custom metadata to be attached to user inventory items, not to be confused with catalog item metadata
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewGrantItemsToUserRequest instantiates a new GrantItemsToUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrantItemsToUserRequest() *GrantItemsToUserRequest {
	this := GrantItemsToUserRequest{}
	return &this
}

// NewGrantItemsToUserRequestWithDefaults instantiates a new GrantItemsToUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrantItemsToUserRequestWithDefaults() *GrantItemsToUserRequest {
	this := GrantItemsToUserRequest{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GrantItemsToUserRequest) GetItems() map[string]int32 {
	if o == nil || isNil(o.Items) {
		var ret map[string]int32
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantItemsToUserRequest) GetItemsOk() (*map[string]int32, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GrantItemsToUserRequest) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given map[string]int32 and assigns it to the Items field.
func (o *GrantItemsToUserRequest) SetItems(v map[string]int32) {
	o.Items = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GrantItemsToUserRequest) GetMetadata() map[string]interface{} {
	if o == nil || isNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantItemsToUserRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GrantItemsToUserRequest) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *GrantItemsToUserRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o GrantItemsToUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableGrantItemsToUserRequest struct {
	value *GrantItemsToUserRequest
	isSet bool
}

func (v NullableGrantItemsToUserRequest) Get() *GrantItemsToUserRequest {
	return v.value
}

func (v *NullableGrantItemsToUserRequest) Set(val *GrantItemsToUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGrantItemsToUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGrantItemsToUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrantItemsToUserRequest(val *GrantItemsToUserRequest) *NullableGrantItemsToUserRequest {
	return &NullableGrantItemsToUserRequest{value: val, isSet: true}
}

func (v NullableGrantItemsToUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrantItemsToUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
