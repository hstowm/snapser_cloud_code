/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// LeaderboardsUserScore struct for LeaderboardsUserScore
type LeaderboardsUserScore struct {
	// User's rank starting with 1
	Rank *int64 `json:"rank,omitempty"`
	// User's score
	Score *float64 `json:"score,omitempty"`
	// User ID of the user
	UserId *string `json:"user_id,omitempty"`
}

// NewLeaderboardsUserScore instantiates a new LeaderboardsUserScore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeaderboardsUserScore() *LeaderboardsUserScore {
	this := LeaderboardsUserScore{}
	return &this
}

// NewLeaderboardsUserScoreWithDefaults instantiates a new LeaderboardsUserScore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeaderboardsUserScoreWithDefaults() *LeaderboardsUserScore {
	this := LeaderboardsUserScore{}
	return &this
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *LeaderboardsUserScore) GetRank() int64 {
	if o == nil || isNil(o.Rank) {
		var ret int64
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsUserScore) GetRankOk() (*int64, bool) {
	if o == nil || isNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *LeaderboardsUserScore) HasRank() bool {
	if o != nil && !isNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given int64 and assigns it to the Rank field.
func (o *LeaderboardsUserScore) SetRank(v int64) {
	o.Rank = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *LeaderboardsUserScore) GetScore() float64 {
	if o == nil || isNil(o.Score) {
		var ret float64
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsUserScore) GetScoreOk() (*float64, bool) {
	if o == nil || isNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *LeaderboardsUserScore) HasScore() bool {
	if o != nil && !isNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float64 and assigns it to the Score field.
func (o *LeaderboardsUserScore) SetScore(v float64) {
	o.Score = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LeaderboardsUserScore) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsUserScore) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LeaderboardsUserScore) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *LeaderboardsUserScore) SetUserId(v string) {
	o.UserId = &v
}

func (o LeaderboardsUserScore) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	if !isNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !isNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableLeaderboardsUserScore struct {
	value *LeaderboardsUserScore
	isSet bool
}

func (v NullableLeaderboardsUserScore) Get() *LeaderboardsUserScore {
	return v.value
}

func (v *NullableLeaderboardsUserScore) Set(val *LeaderboardsUserScore) {
	v.value = val
	v.isSet = true
}

func (v NullableLeaderboardsUserScore) IsSet() bool {
	return v.isSet
}

func (v *NullableLeaderboardsUserScore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeaderboardsUserScore(val *LeaderboardsUserScore) *NullableLeaderboardsUserScore {
	return &NullableLeaderboardsUserScore{value: val, isSet: true}
}

func (v NullableLeaderboardsUserScore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeaderboardsUserScore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
