/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// LeaderboardsIncrementScoreResponse struct for LeaderboardsIncrementScoreResponse
type LeaderboardsIncrementScoreResponse struct {
	// Latest rank to be returned
	Rank *float32 `json:"rank,omitempty"`
	// Incremented score to be returned
	Score *float64          `json:"score,omitempty"`
	Tier  *LeaderboardsTier `json:"tier,omitempty"`
}

// NewLeaderboardsIncrementScoreResponse instantiates a new LeaderboardsIncrementScoreResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeaderboardsIncrementScoreResponse() *LeaderboardsIncrementScoreResponse {
	this := LeaderboardsIncrementScoreResponse{}
	return &this
}

// NewLeaderboardsIncrementScoreResponseWithDefaults instantiates a new LeaderboardsIncrementScoreResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeaderboardsIncrementScoreResponseWithDefaults() *LeaderboardsIncrementScoreResponse {
	this := LeaderboardsIncrementScoreResponse{}
	return &this
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *LeaderboardsIncrementScoreResponse) GetRank() float32 {
	if o == nil || isNil(o.Rank) {
		var ret float32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsIncrementScoreResponse) GetRankOk() (*float32, bool) {
	if o == nil || isNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *LeaderboardsIncrementScoreResponse) HasRank() bool {
	if o != nil && !isNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given float32 and assigns it to the Rank field.
func (o *LeaderboardsIncrementScoreResponse) SetRank(v float32) {
	o.Rank = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *LeaderboardsIncrementScoreResponse) GetScore() float64 {
	if o == nil || isNil(o.Score) {
		var ret float64
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsIncrementScoreResponse) GetScoreOk() (*float64, bool) {
	if o == nil || isNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *LeaderboardsIncrementScoreResponse) HasScore() bool {
	if o != nil && !isNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float64 and assigns it to the Score field.
func (o *LeaderboardsIncrementScoreResponse) SetScore(v float64) {
	o.Score = &v
}

// GetTier returns the Tier field value if set, zero value otherwise.
func (o *LeaderboardsIncrementScoreResponse) GetTier() LeaderboardsTier {
	if o == nil || isNil(o.Tier) {
		var ret LeaderboardsTier
		return ret
	}
	return *o.Tier
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsIncrementScoreResponse) GetTierOk() (*LeaderboardsTier, bool) {
	if o == nil || isNil(o.Tier) {
		return nil, false
	}
	return o.Tier, true
}

// HasTier returns a boolean if a field has been set.
func (o *LeaderboardsIncrementScoreResponse) HasTier() bool {
	if o != nil && !isNil(o.Tier) {
		return true
	}

	return false
}

// SetTier gets a reference to the given LeaderboardsTier and assigns it to the Tier field.
func (o *LeaderboardsIncrementScoreResponse) SetTier(v LeaderboardsTier) {
	o.Tier = &v
}

func (o LeaderboardsIncrementScoreResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	if !isNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !isNil(o.Tier) {
		toSerialize["tier"] = o.Tier
	}
	return json.Marshal(toSerialize)
}

type NullableLeaderboardsIncrementScoreResponse struct {
	value *LeaderboardsIncrementScoreResponse
	isSet bool
}

func (v NullableLeaderboardsIncrementScoreResponse) Get() *LeaderboardsIncrementScoreResponse {
	return v.value
}

func (v *NullableLeaderboardsIncrementScoreResponse) Set(val *LeaderboardsIncrementScoreResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLeaderboardsIncrementScoreResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLeaderboardsIncrementScoreResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeaderboardsIncrementScoreResponse(val *LeaderboardsIncrementScoreResponse) *NullableLeaderboardsIncrementScoreResponse {
	return &NullableLeaderboardsIncrementScoreResponse{value: val, isSet: true}
}

func (v NullableLeaderboardsIncrementScoreResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeaderboardsIncrementScoreResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
