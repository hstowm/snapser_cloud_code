/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// LeaderboardsTier struct for LeaderboardsTier
type LeaderboardsTier struct {
	BucketSize  *string `json:"bucket_size,omitempty"`
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// NewLeaderboardsTier instantiates a new LeaderboardsTier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeaderboardsTier() *LeaderboardsTier {
	this := LeaderboardsTier{}
	return &this
}

// NewLeaderboardsTierWithDefaults instantiates a new LeaderboardsTier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeaderboardsTierWithDefaults() *LeaderboardsTier {
	this := LeaderboardsTier{}
	return &this
}

// GetBucketSize returns the BucketSize field value if set, zero value otherwise.
func (o *LeaderboardsTier) GetBucketSize() string {
	if o == nil || isNil(o.BucketSize) {
		var ret string
		return ret
	}
	return *o.BucketSize
}

// GetBucketSizeOk returns a tuple with the BucketSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsTier) GetBucketSizeOk() (*string, bool) {
	if o == nil || isNil(o.BucketSize) {
		return nil, false
	}
	return o.BucketSize, true
}

// HasBucketSize returns a boolean if a field has been set.
func (o *LeaderboardsTier) HasBucketSize() bool {
	if o != nil && !isNil(o.BucketSize) {
		return true
	}

	return false
}

// SetBucketSize gets a reference to the given string and assigns it to the BucketSize field.
func (o *LeaderboardsTier) SetBucketSize(v string) {
	o.BucketSize = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LeaderboardsTier) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsTier) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LeaderboardsTier) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LeaderboardsTier) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LeaderboardsTier) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardsTier) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LeaderboardsTier) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LeaderboardsTier) SetName(v string) {
	o.Name = &v
}

func (o LeaderboardsTier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BucketSize) {
		toSerialize["bucket_size"] = o.BucketSize
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableLeaderboardsTier struct {
	value *LeaderboardsTier
	isSet bool
}

func (v NullableLeaderboardsTier) Get() *LeaderboardsTier {
	return v.value
}

func (v *NullableLeaderboardsTier) Set(val *LeaderboardsTier) {
	v.value = val
	v.isSet = true
}

func (v NullableLeaderboardsTier) IsSet() bool {
	return v.isSet
}

func (v *NullableLeaderboardsTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeaderboardsTier(val *LeaderboardsTier) *NullableLeaderboardsTier {
	return &NullableLeaderboardsTier{value: val, isSet: true}
}

func (v NullableLeaderboardsTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeaderboardsTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
