/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// IncrementUserStatisticRequest struct for IncrementUserStatisticRequest
type IncrementUserStatisticRequest struct {
	// Value to increment the statistic by. Use negative to decrement
	Delta int64 `json:"delta"`
}

// NewIncrementUserStatisticRequest instantiates a new IncrementUserStatisticRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncrementUserStatisticRequest(delta int64) *IncrementUserStatisticRequest {
	this := IncrementUserStatisticRequest{}
	this.Delta = delta
	return &this
}

// NewIncrementUserStatisticRequestWithDefaults instantiates a new IncrementUserStatisticRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncrementUserStatisticRequestWithDefaults() *IncrementUserStatisticRequest {
	this := IncrementUserStatisticRequest{}
	return &this
}

// GetDelta returns the Delta field value
func (o *IncrementUserStatisticRequest) GetDelta() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value
// and a boolean to check if the value has been set.
func (o *IncrementUserStatisticRequest) GetDeltaOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Delta, true
}

// SetDelta sets field value
func (o *IncrementUserStatisticRequest) SetDelta(v int64) {
	o.Delta = v
}

func (o IncrementUserStatisticRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["delta"] = o.Delta
	}
	return json.Marshal(toSerialize)
}

type NullableIncrementUserStatisticRequest struct {
	value *IncrementUserStatisticRequest
	isSet bool
}

func (v NullableIncrementUserStatisticRequest) Get() *IncrementUserStatisticRequest {
	return v.value
}

func (v *NullableIncrementUserStatisticRequest) Set(val *IncrementUserStatisticRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIncrementUserStatisticRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIncrementUserStatisticRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncrementUserStatisticRequest(val *IncrementUserStatisticRequest) *NullableIncrementUserStatisticRequest {
	return &NullableIncrementUserStatisticRequest{value: val, isSet: true}
}

func (v NullableIncrementUserStatisticRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncrementUserStatisticRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
