/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// StorageIncrementCounterResponse struct for StorageIncrementCounterResponse
type StorageIncrementCounterResponse struct {
	// Value of the counter
	Count int32 `json:"count"`
}

// NewStorageIncrementCounterResponse instantiates a new StorageIncrementCounterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageIncrementCounterResponse(count int32) *StorageIncrementCounterResponse {
	this := StorageIncrementCounterResponse{}
	this.Count = count
	return &this
}

// NewStorageIncrementCounterResponseWithDefaults instantiates a new StorageIncrementCounterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageIncrementCounterResponseWithDefaults() *StorageIncrementCounterResponse {
	this := StorageIncrementCounterResponse{}
	return &this
}

// GetCount returns the Count field value
func (o *StorageIncrementCounterResponse) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *StorageIncrementCounterResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *StorageIncrementCounterResponse) SetCount(v int32) {
	o.Count = v
}

func (o StorageIncrementCounterResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableStorageIncrementCounterResponse struct {
	value *StorageIncrementCounterResponse
	isSet bool
}

func (v NullableStorageIncrementCounterResponse) Get() *StorageIncrementCounterResponse {
	return v.value
}

func (v *NullableStorageIncrementCounterResponse) Set(val *StorageIncrementCounterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageIncrementCounterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageIncrementCounterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageIncrementCounterResponse(val *StorageIncrementCounterResponse) *NullableStorageIncrementCounterResponse {
	return &NullableStorageIncrementCounterResponse{value: val, isSet: true}
}

func (v NullableStorageIncrementCounterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageIncrementCounterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
