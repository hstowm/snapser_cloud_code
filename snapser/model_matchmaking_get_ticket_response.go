/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// MatchmakingGetTicketResponse struct for MatchmakingGetTicketResponse
type MatchmakingGetTicketResponse struct {
	Ticket *MatchmakingTicket `json:"ticket,omitempty"`
}

// NewMatchmakingGetTicketResponse instantiates a new MatchmakingGetTicketResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchmakingGetTicketResponse() *MatchmakingGetTicketResponse {
	this := MatchmakingGetTicketResponse{}
	return &this
}

// NewMatchmakingGetTicketResponseWithDefaults instantiates a new MatchmakingGetTicketResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchmakingGetTicketResponseWithDefaults() *MatchmakingGetTicketResponse {
	this := MatchmakingGetTicketResponse{}
	return &this
}

// GetTicket returns the Ticket field value if set, zero value otherwise.
func (o *MatchmakingGetTicketResponse) GetTicket() MatchmakingTicket {
	if o == nil || isNil(o.Ticket) {
		var ret MatchmakingTicket
		return ret
	}
	return *o.Ticket
}

// GetTicketOk returns a tuple with the Ticket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchmakingGetTicketResponse) GetTicketOk() (*MatchmakingTicket, bool) {
	if o == nil || isNil(o.Ticket) {
		return nil, false
	}
	return o.Ticket, true
}

// HasTicket returns a boolean if a field has been set.
func (o *MatchmakingGetTicketResponse) HasTicket() bool {
	if o != nil && !isNil(o.Ticket) {
		return true
	}

	return false
}

// SetTicket gets a reference to the given MatchmakingTicket and assigns it to the Ticket field.
func (o *MatchmakingGetTicketResponse) SetTicket(v MatchmakingTicket) {
	o.Ticket = &v
}

func (o MatchmakingGetTicketResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Ticket) {
		toSerialize["ticket"] = o.Ticket
	}
	return json.Marshal(toSerialize)
}

type NullableMatchmakingGetTicketResponse struct {
	value *MatchmakingGetTicketResponse
	isSet bool
}

func (v NullableMatchmakingGetTicketResponse) Get() *MatchmakingGetTicketResponse {
	return v.value
}

func (v *NullableMatchmakingGetTicketResponse) Set(val *MatchmakingGetTicketResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchmakingGetTicketResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchmakingGetTicketResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchmakingGetTicketResponse(val *MatchmakingGetTicketResponse) *NullableMatchmakingGetTicketResponse {
	return &NullableMatchmakingGetTicketResponse{value: val, isSet: true}
}

func (v NullableMatchmakingGetTicketResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchmakingGetTicketResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
