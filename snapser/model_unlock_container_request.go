/*
Roi_dev

Your custom SDK

API version: Roi_dev: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapser

import (
	"encoding/json"
)

// UnlockContainerRequest struct for UnlockContainerRequest
type UnlockContainerRequest struct {
	// Custom metadata to be attached to user inventory items, not to be confused with catalog item metadata
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewUnlockContainerRequest instantiates a new UnlockContainerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlockContainerRequest() *UnlockContainerRequest {
	this := UnlockContainerRequest{}
	return &this
}

// NewUnlockContainerRequestWithDefaults instantiates a new UnlockContainerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlockContainerRequestWithDefaults() *UnlockContainerRequest {
	this := UnlockContainerRequest{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UnlockContainerRequest) GetMetadata() map[string]interface{} {
	if o == nil || isNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlockContainerRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UnlockContainerRequest) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *UnlockContainerRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o UnlockContainerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableUnlockContainerRequest struct {
	value *UnlockContainerRequest
	isSet bool
}

func (v NullableUnlockContainerRequest) Get() *UnlockContainerRequest {
	return v.value
}

func (v *NullableUnlockContainerRequest) Set(val *UnlockContainerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlockContainerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlockContainerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlockContainerRequest(val *UnlockContainerRequest) *NullableUnlockContainerRequest {
	return &NullableUnlockContainerRequest{value: val, isSet: true}
}

func (v NullableUnlockContainerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlockContainerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
